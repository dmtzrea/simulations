H=1
type=c('Jacobi')
Y=(burn$T1)
Delta=burn$D1
verbose = 2
link="exp"
starting_beta = FALSE
trials = 50
coeff_portnoy = c()
coeff_lag = c()
coeff_het = c()
## absolute value link
id = function(x){return(abs(x))}
idd = function(x){return(ifelse(x>=0, 1, -1))}
link2 = list(id, idd)
set.seed(1239)
for(tau in seq(from = 0.1, to = 0.55, by = 0.05)){
print(tau)
crq = crq(Surv(Y,Delta, type='right')~X[,2], tau=tau, method = "Portnoy")
est_abs = try(laguerre_estimator_het(m,m_tilde,H,X,X_s,type, Y, Delta, tau,trials=trials, verbose=1,link=link2))
while(est_abs$objective %in% c(-Inf, Inf)){
est_abs = try(laguerre_estimator_het(m,m_tilde,H,X,X_s,type, Y, Delta, tau,trials=trials, verbose=1,link=link2))
}
beta_h = laguerre_estimator_het(m,m_tilde,0, X=X,X_s,type, Y=Y, Delta=Delta, tau=tau,trials=trials, verbose = 1)$beta
coeff_portnoy = rbind(coeff_portnoy, crq$sol[2:4,which.min(abs(tau - crq$sol["tau",]))])
coeff_lag = rbind(coeff_lag, beta_h)
coeff_het = rbind(coeff_het, est_abs$beta)
}
save(coeff_het, file = 'coeff_het.RData')
save(coeff_lag, file = 'coeff_lag.RData')
save(coeff_portnoy, file = 'coeff_portnoy.RData')
#PLOTS QUANTILE LINES ----
# New facet label names for sex variable
labs <- c("Male", "Female")
names(labs) <- c("0", "1")
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,6])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,7])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,8])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,9])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,10]))
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,6])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,7])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,8])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,9])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,10]))
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_portnoy)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_portnoy)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_portnoy)[,3])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_portnoy)[,4])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_portnoy)[,5])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_portnoy)[,6])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_portnoy)[,7])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_portnoy)[,8])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_portnoy)[,9])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_portnoy)[,10]))
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_lag)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_lag)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_lag)[,3])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_lag)[,4])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_lag)[,5])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_lag)[,6])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_lag)[,7])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_lag)[,8])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_lag)[,9])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_lag)[,10]))
graph(est_abs)
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1]))
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,2]))
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,3]))
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,4]))
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,5]))
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,6]))
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,6])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,7]))
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,6])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,7])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,8]))
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,6])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,7])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,8])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,9]))
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,6])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,7])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,8])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,9])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,10]))
# Function to check libraries----
package_load<-function(packages = NULL, quiet=TRUE,
verbose=FALSE, warn.conflicts=FALSE){
# download required packages if they're not already
pkgsToDownload<- packages[!(packages  %in% installed.packages()[,"Package"])]
if(length(pkgsToDownload)>0)
install.packages(pkgsToDownload, repos="http://cran.us.r-project.org",
quiet=quiet, verbose=verbose)
# then load them
for(i in 1:length(packages))
require(packages[i], character.only=T, quietly=quiet,
warn.conflicts=warn.conflicts)
}
## Load Libraries ----
package_load(c('abind', 'foreach', 'doParallel', 'dplyr', 'devtools', 'pracma',
'tidyr', 'ggplot2', 'kableExtra','quantreg', 'survival',
'orthopolynom', 'EQL', 'nloptr', 'SphericalCubature', 'polynom',
'stringr', 'ggrepel', 'KMsurv'))
install_github("dmtzrea/Laguerre2")
library(Laguerre)
## SET WD  ----
# sets wd to the path where this script lives
setwd(dir = dirname(rstudioapi::getSourceEditorContext()$path))
# Initial analysis ----
library(ggplot2)
library(quantreg)
library(Laguerre)
library(survival)
library(KMsurv)
library(dplyr)
library(tidyr)
# btrial
data(burn)
X = as.matrix(cbind(rep(1, nrow(burn)),burn$Z4/100, model.matrix(~burn$Z2)[, 2]))
X_s = as.matrix(burn$Z4/100)
m = 2
m_tilde = 2
H=2
type=c('Jacobi')
Y=(burn$T1)
Delta=burn$D1
verbose = 2
link="exp"
starting_beta = FALSE
trials = 50
coeff_portnoy = c()
coeff_lag = c()
coeff_het = c()
## absolute value link
id = function(x){return(abs(x))}
idd = function(x){return(ifelse(x>=0, 1, -1))}
link2 = list(id, idd)
set.seed(1239)
for(tau in seq(from = 0.1, to = 0.55, by = 0.05)){
print(tau)
crq = crq(Surv(Y,Delta, type='right')~X[,2], tau=tau, method = "Portnoy")
est_abs = try(laguerre_estimator_het(m,m_tilde,H,X,X_s,type, Y, Delta, tau,trials=trials, verbose=1,link=link2))
while(est_abs$objective %in% c(-Inf, Inf)){
est_abs = try(laguerre_estimator_het(m,m_tilde,H,X,X_s,type, Y, Delta, tau,trials=trials, verbose=1,link=link2))
}
beta_h = laguerre_estimator_het(m,m_tilde,0, X=X,X_s,type, Y=Y, Delta=Delta, tau=tau,trials=trials, verbose = 1)$beta
coeff_portnoy = rbind(coeff_portnoy, crq$sol[2:4,which.min(abs(tau - crq$sol["tau",]))])
coeff_lag = rbind(coeff_lag, beta_h)
coeff_het = rbind(coeff_het, est_abs$beta)
}
save(coeff_het, file = 'coeff_het.RData')
save(coeff_lag, file = 'coeff_lag.RData')
save(coeff_portnoy, file = 'coeff_portnoy.RData')
#PLOTS QUANTILE LINES ----
# New facet label names for sex variable
labs <- c("Male", "Female")
names(labs) <- c("0", "1")
burn %>% ggplot(aes(x = Z4/100, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,6])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,7])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,8])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,9])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,10]))
burn %>% ggplot(aes(x = Z4/100, y = T3) )+ geom_point(aes(color = as.factor(D3)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D3')
# Function to check libraries----
package_load<-function(packages = NULL, quiet=TRUE,
verbose=FALSE, warn.conflicts=FALSE){
# download required packages if they're not already
pkgsToDownload<- packages[!(packages  %in% installed.packages()[,"Package"])]
if(length(pkgsToDownload)>0)
install.packages(pkgsToDownload, repos="http://cran.us.r-project.org",
quiet=quiet, verbose=verbose)
# then load them
for(i in 1:length(packages))
require(packages[i], character.only=T, quietly=quiet,
warn.conflicts=warn.conflicts)
}
## Load Libraries ----
package_load(c('abind', 'foreach', 'doParallel', 'dplyr', 'devtools', 'pracma',
'tidyr', 'ggplot2', 'kableExtra','quantreg', 'survival',
'orthopolynom', 'EQL', 'nloptr', 'SphericalCubature', 'polynom',
'stringr', 'ggrepel', 'KMsurv'))
install_github("dmtzrea/Laguerre2")
library(Laguerre)
## SET WD  ----
# sets wd to the path where this script lives
setwd(dir = dirname(rstudioapi::getSourceEditorContext()$path))
# Initial analysis ----
library(ggplot2)
library(quantreg)
library(Laguerre)
library(survival)
library(KMsurv)
library(dplyr)
library(tidyr)
# btrial
data(burn)
X = as.matrix(cbind(rep(1, nrow(burn)),burn$Z4/100, model.matrix(~burn$Z2)[, 2]))
X_s = as.matrix(burn$Z4/100)
m = 2
m_tilde = 2
H=2
type=c('Jacobi')
Y=(burn$T3)
Delta=burn$D3
verbose = 2
link="exp"
starting_beta = FALSE
trials = 50
coeff_portnoy = c()
coeff_lag = c()
coeff_het = c()
## absolute value link
id = function(x){return(abs(x))}
idd = function(x){return(ifelse(x>=0, 1, -1))}
link2 = list(id, idd)
set.seed(1239)
for(tau in seq(from = 0.1, to = 0.55, by = 0.05)){
print(tau)
crq = crq(Surv(Y,Delta, type='right')~X[,2], tau=tau, method = "Portnoy")
est_abs = try(laguerre_estimator_het(m,m_tilde,H,X,X_s,type, Y, Delta, tau,trials=trials, verbose=1,link=link2))
while(est_abs$objective %in% c(-Inf, Inf)){
est_abs = try(laguerre_estimator_het(m,m_tilde,H,X,X_s,type, Y, Delta, tau,trials=trials, verbose=1,link=link2))
}
beta_h = laguerre_estimator_het(m,m_tilde,0, X=X,X_s,type, Y=Y, Delta=Delta, tau=tau,trials=trials, verbose = 1)$beta
coeff_portnoy = rbind(coeff_portnoy, crq$sol[2:4,which.min(abs(tau - crq$sol["tau",]))])
coeff_lag = rbind(coeff_lag, beta_h)
coeff_het = rbind(coeff_het, est_abs$beta)
}
save(coeff_het, file = 'coeff_het.RData')
save(coeff_lag, file = 'coeff_lag.RData')
save(coeff_portnoy, file = 'coeff_portnoy.RData')
burn %>% ggplot(aes(x = Z4/100, y = T3) )+ geom_point(aes(color = as.factor(D3)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D3') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,6]))
burn %>% ggplot(aes(x = Z4/100, y = T3) )+ geom_point(aes(color = as.factor(D3)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D3') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,6])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,7])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,8]))
burn %>% ggplot(aes(x = Z4/100, y = T2) )+ geom_point(aes(color = as.factor(D2)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D2')
# Function to check libraries----
package_load<-function(packages = NULL, quiet=TRUE,
verbose=FALSE, warn.conflicts=FALSE){
# download required packages if they're not already
pkgsToDownload<- packages[!(packages  %in% installed.packages()[,"Package"])]
if(length(pkgsToDownload)>0)
install.packages(pkgsToDownload, repos="http://cran.us.r-project.org",
quiet=quiet, verbose=verbose)
# then load them
for(i in 1:length(packages))
require(packages[i], character.only=T, quietly=quiet,
warn.conflicts=warn.conflicts)
}
## Load Libraries ----
package_load(c('abind', 'foreach', 'doParallel', 'dplyr', 'devtools', 'pracma',
'tidyr', 'ggplot2', 'kableExtra','quantreg', 'survival',
'orthopolynom', 'EQL', 'nloptr', 'SphericalCubature', 'polynom',
'stringr', 'ggrepel', 'KMsurv'))
install_github("dmtzrea/Laguerre2")
library(Laguerre)
## SET WD  ----
# sets wd to the path where this script lives
setwd(dir = dirname(rstudioapi::getSourceEditorContext()$path))
# Initial analysis ----
library(ggplot2)
library(quantreg)
library(Laguerre)
library(survival)
library(KMsurv)
library(dplyr)
library(tidyr)
# btrial
data(burn)
X = as.matrix(cbind(rep(1, nrow(burn)),burn$Z4/100, model.matrix(~burn$Z2)[, 2]))
X_s = as.matrix(burn$Z4/100)
m = 2
m_tilde = 2
H=2
type=c('Jacobi')
Y=(burn$T2)
Delta=burn$D2
verbose = 2
link="exp"
starting_beta = FALSE
trials = 50
coeff_portnoy = c()
coeff_lag = c()
coeff_het = c()
## absolute value link
id = function(x){return(abs(x))}
idd = function(x){return(ifelse(x>=0, 1, -1))}
link2 = list(id, idd)
set.seed(1239)
for(tau in seq(from = 0.1, to = 0.55, by = 0.05)){
print(tau)
crq = crq(Surv(Y,Delta, type='right')~X[,2], tau=tau, method = "Portnoy")
est_abs = try(laguerre_estimator_het(m,m_tilde,H,X,X_s,type, Y, Delta, tau,trials=trials, verbose=1,link=link2))
while(est_abs$objective %in% c(-Inf, Inf)){
est_abs = try(laguerre_estimator_het(m,m_tilde,H,X,X_s,type, Y, Delta, tau,trials=trials, verbose=1,link=link2))
}
beta_h = laguerre_estimator_het(m,m_tilde,0, X=X,X_s,type, Y=Y, Delta=Delta, tau=tau,trials=trials, verbose = 1)$beta
coeff_portnoy = rbind(coeff_portnoy, crq$sol[2:4,which.min(abs(tau - crq$sol["tau",]))])
coeff_lag = rbind(coeff_lag, beta_h)
coeff_het = rbind(coeff_het, est_abs$beta)
}
save(coeff_het, file = 'coeff_het.RData')
save(coeff_lag, file = 'coeff_lag.RData')
save(coeff_portnoy, file = 'coeff_portnoy.RData')
burn %>% ggplot(aes(x = Z4/100, y = T2) )+ geom_point(aes(color = as.factor(D2)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D2') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,6])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,7])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,8])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,9])) +
geom_line(aes(x = Z4/100, y = X%*%t(coeff_het)[,10]))
est_abs$H
