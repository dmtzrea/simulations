geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,2])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,3])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,4])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,5])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,6])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,7])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,8])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,9]))
burn %>% ggplot(aes(x = Z4, y = T1) )+ geom_point(aes(color = as.factor(D1))) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,1])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,2])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,3])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,4])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,5])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,6])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,7])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,8])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,9])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,10]))
ggsave(burn %>% ggplot(aes(x = Z4, y = T1) )+ geom_point(aes(color = as.factor(D1))) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,6])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,7])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,8])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,9])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,10])),
path = paste0("PLOTS/"),
filename = paste0('burn_data_laguerre_het', ".png"),
width = 7,
height = 5
)
ggsave(burn %>% ggplot(aes(x = Z4, y = T1) )+ geom_point(aes(color = as.factor(D1))) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,6])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,7])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,8])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,9])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,10])),
path = paste0("PLOTS/"),
filename = paste0('burn_data_laguerre_het', ".png"),
width = 6,
height = 3
)
ggsave(burn %>% ggplot(aes(x = Z4, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.1) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,6])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,7])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,8])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,9])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,10])),
path = paste0("PLOTS/"),
filename = paste0('burn_data_laguerre_het', ".png"),
width = 6,
height = 3
)
ggsave(burn %>% ggplot(aes(x = Z4, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.4) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,6])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,7])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,8])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,9])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,10])),
path = paste0("PLOTS/"),
filename = paste0('burn_data_laguerre_het', ".png"),
width = 6,
height = 3
)
ggsave(burn %>% ggplot(aes(x = Z4, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,1])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,2])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,3])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,4])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,5])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,6])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,7])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,8])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,9])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_het)[,10])),
path = paste0("PLOTS/"),
filename = paste0('burn_data_laguerre_het', ".png"),
width = 6,
height = 3
)
ggsave(burn %>% ggplot(aes(x = Z4, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4, y = X%*%t(coeff_portnoy)[,1])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_portnoy)[,2])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_portnoy)[,3])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_portnoy)[,4])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_portnoy)[,5])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_portnoy)[,6])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_portnoy)[,7])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_portnoy)[,8])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_portnoy)[,9])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_portnoy)[,10])),
path = paste0("PLOTS/"),
filename = paste0('burn_data_portnoy', ".png"),
width = 6,
height = 3
)
ggsave(burn %>% ggplot(aes(x = Z4, y = T1) )+ geom_point(aes(color = as.factor(D1)), size = 0.7) +
facet_wrap(Z2 ~., ncol = 2, labeller = labeller(Z2 = labs)) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.position = 'bottom') +
labs(color = 'D1') +
scale_color_manual(values = c("#E69F00", "steelblue"), labels = c('0' = 'censored', '1' = 'observed')) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,1])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,2])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,3])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,4])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,5])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,6])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,7])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,8])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,9])) +
geom_line(aes(x = Z4, y = X%*%t(coeff_lag)[,10])),
path = paste0("PLOTS/"),
filename = paste0('burn_data_lag', ".png"),
width = 6,
height = 3
)
### PLOTS LAGUERRE HET ----
load('coeff_het.RData',  temp_env <- new.env())
coeff_het <- as.list(temp_env)[[1]] # load coefficients from estimation on original data
quantile_low = function(x){quantile(x=x, probs = c(0.025))}
quantile_up = function(x){quantile(x=x, probs = c(0.975))}
#bootstrap CI's
data_boot = coeffs[,1:3,] |> apply( MARGIN = c(1,2), FUN = quantile_low) |>
cbind(coeffs[,1:3,] |> apply( MARGIN = c(1,2), FUN = quantile_up)) |> cbind(coeffs[,"quantile",1])
colnames(data_boot) = c('intercept_l', 'perc_burn_l', 'sex_fem_l',
'intercept_u', 'perc_burn_u', 'sex_fem_u',
'quantile')
rownames(data_boot) = 1:nrow(data_boot)
data_boot = as.data.frame(data_boot)
rownames(coeff_het) = 1:nrow(coeff_het)
colnames(coeff_het) = c('intercept', 'perc_burn', 'sex_fem')
coeff_het = coeff_het |> as.data.frame() |> cbind(coeffs[,"quantile",1])
colnames(coeff_het) = c('intercept', 'perc_burn', 'sex_fem', 'quantile')
# PLOTTING CI's
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = intercept_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = intercept_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = intercept_l,
ymax = intercept_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_het, aes(x = quantile, y = intercept)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Intercept') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggsave(
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = perc_burn_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = perc_burn_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = perc_burn_l,
ymax = perc_burn_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_het, aes(x = quantile, y = perc_burn)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Percentage Burned') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")),
path = paste0("PLOTS/"),
filename = paste0('het_model_intercept', ".png"),
width = 6,
height = 3
)
ggsave(
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = perc_burn_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = perc_burn_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = perc_burn_l,
ymax = perc_burn_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_het, aes(x = quantile, y = perc_burn)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Percentage Burned') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")),
path = paste0("PLOTS/"),
filename = paste0('het_model_sex', ".png"),
width = 6,
height = 3
)
# PLOTTING CI's
ggsave(
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = intercept_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = intercept_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = intercept_l,
ymax = intercept_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_het, aes(x = quantile, y = intercept)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Intercept') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")),
path = paste0("PLOTS/"),
filename = paste0('het_model_intercept', ".png"),
width = 6,
height = 3
)
ggsave(
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = perc_burn_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = perc_burn_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = perc_burn_l,
ymax = perc_burn_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_het, aes(x = quantile, y = perc_burn)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Percentage Burned') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")),
path = paste0("PLOTS/"),
filename = paste0('het_model_perc', ".png"),
width = 6,
height = 3
)
ggsave(
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = sex_fem_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = sex_fem_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = sex_fem_l,
ymax = sex_fem_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_het, aes(x = quantile, y = sex_fem)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Sex') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")),
path = paste0("PLOTS/"),
filename = paste0('het_model_sex', ".png"),
width = 6,
height = 3
)
# PLOTTING CI's
ggsave(
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = intercept_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = intercept_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = intercept_l,
ymax = intercept_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_lag, aes(x = quantile, y = intercept)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Intercept') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")),
path = paste0("PLOTS/"),
filename = paste0('lag_model_intercept', ".png"),
width = 6,
height = 3
)
ggsave(
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = perc_burn_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = perc_burn_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = perc_burn_l,
ymax = perc_burn_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_lag, aes(x = quantile, y = perc_burn)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Percentage Burned') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")),
path = paste0("PLOTS/"),
filename = paste0('lag_model_perc', ".png"),
width = 6,
height = 3
)
ggsave(
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = sex_fem_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = sex_fem_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = sex_fem_l,
ymax = sex_fem_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_lag, aes(x = quantile, y = sex_fem)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Sex') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")),
path = paste0("PLOTS/"),
filename = paste0('lag_model_sex', ".png"),
width = 6,
height = 3
)
#bootstrap CI's
data_boot = coeffs[,4:6,] |> apply( MARGIN = c(1,2), FUN = quantile_low) |>
cbind(coeffs[,4:6,] |> apply( MARGIN = c(1,2), FUN = quantile_up)) |> cbind(coeffs[,"quantile",1])
colnames(data_boot) = c('intercept_l', 'perc_burn_l', 'sex_fem_l',
'intercept_u', 'perc_burn_u', 'sex_fem_u',
'quantile')
rownames(data_boot) = 1:nrow(data_boot)
data_boot = as.data.frame(data_boot)
rownames(coeff_lag) = 1:nrow(coeff_lag)
colnames(coeff_lag) = c('intercept', 'perc_burn', 'sex_fem')
coeff_lag = coeff_lag |> as.data.frame() |> cbind(coeffs[,"quantile",1])
colnames(coeff_lag) = c('intercept', 'perc_burn', 'sex_fem', 'quantile')
# PLOTTING CI's
ggsave(
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = intercept_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = intercept_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = intercept_l,
ymax = intercept_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_lag, aes(x = quantile, y = intercept)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Intercept') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")),
path = paste0("PLOTS/"),
filename = paste0('lag_model_intercept', ".png"),
width = 6,
height = 3
)
ggsave(
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = perc_burn_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = perc_burn_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = perc_burn_l,
ymax = perc_burn_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_lag, aes(x = quantile, y = perc_burn)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Percentage Burned') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")),
path = paste0("PLOTS/"),
filename = paste0('lag_model_perc', ".png"),
width = 6,
height = 3
)
ggsave(
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = sex_fem_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = sex_fem_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = sex_fem_l,
ymax = sex_fem_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_lag, aes(x = quantile, y = sex_fem)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Sex') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")),
path = paste0("PLOTS/"),
filename = paste0('lag_model_sex', ".png"),
width = 6,
height = 3
)
### PLOTS PORTNOY ----
load('coeff_portnoy.RData',  temp_env <- new.env())
coeff_p <- as.list(temp_env)[[1]] # load coefficients from estimation on original data
quantile_low = function(x){quantile(x=x, probs = c(0.025))}
quantile_up = function(x){quantile(x=x, probs = c(0.975))}
#bootstrap CI's
data_boot = coeffs[,7:9,] |> apply( MARGIN = c(1,2), FUN = quantile_low) |>
cbind(coeffs[,7:9,] |> apply( MARGIN = c(1,2), FUN = quantile_up)) |> cbind(coeffs[,"quantile",1])
colnames(data_boot) = c('intercept_l', 'perc_burn_l', 'sex_fem_l',
'intercept_u', 'perc_burn_u', 'sex_fem_u',
'quantile')
rownames(data_boot) = 1:nrow(data_boot)
data_boot = as.data.frame(data_boot)
rownames(coeff_p) = 1:nrow(coeff_p)
colnames(coeff_p) = c('intercept', 'perc_burn', 'sex_fem')
coeff_p = coeff_p |> as.data.frame() |> cbind(coeffs[,"quantile",1])
colnames(coeff_p) = c('intercept', 'perc_burn', 'sex_fem', 'quantile')
# PLOTTING CI's
ggsave(
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = intercept_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = intercept_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = intercept_l,
ymax = intercept_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_p, aes(x = quantile, y = intercept)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Intercept') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")),
path = paste0("PLOTS/"),
filename = paste0('port_model_intercept', ".png"),
width = 6,
height = 3
)
ggsave(
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = perc_burn_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = perc_burn_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = perc_burn_l,
ymax = perc_burn_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_p, aes(x = quantile, y = perc_burn)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Percentage Burned') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")),
path = paste0("PLOTS/"),
filename = paste0('port_model_perc', ".png"),
width = 6,
height = 3
)
ggsave(
data_boot %>% ggplot() +
#geom_line(data = data_boot, aes(x = quantile, y = sex_fem_l)) +
#geom_line(data = data_boot, aes(x = quantile, y = sex_fem_u)) +                                # Add color between lines
geom_ribbon(data = data_boot, aes(x = quantile,
ymin = sex_fem_l,
ymax = sex_fem_u),
fill = "#1b98e0", alpha = 0.2) +
geom_line(data = coeff_p, aes(x = quantile, y = sex_fem)) +
geom_hline(yintercept = 0, color = 'red', linetype = 2) +
ylab('Sex') +
xlab('Quantile') +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")),
path = paste0("PLOTS/"),
filename = paste0('port_model_sex', ".png"),
width = 6,
height = 3
)
citation(package = 'survival')
print(citation(package='survival'), bibtex = TRUE)
sum(burn$D1)/length(burn$D1)
