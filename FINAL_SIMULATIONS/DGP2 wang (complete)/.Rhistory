for(i in 1:trials) {
out <- nloptr::nloptr(x0=starting_values[i,],eval_f=likelihood_wrapper_all,lb=c(rep(-Inf,p),rep(0,m+m_tilde)),ub=c(rep(Inf,p),rep(pi,m+m_tilde)),opts=opts,X=X,Y=Y,Delta=Delta,tau=tau,dims=dims)
result[i,1] <- out$objective
result[i,2:(sum(dims)+1)] <- out$solution
}
}
## Choose the best value
opt <- min(which(result[,1]==min(result[,1])))
beta_est <- result[opt,2:(p+1)]
if(m!=0) {
theta_est <- SphericalCubature::polar2rect(1,result[opt,(p+2):(p+m+1)])
} else {
theta_est <- 1
}
if(m_tilde!=0) {
theta_tilde_est <- SphericalCubature::polar2rect(1,result[opt,(p+m+2):(p+m+m_tilde+1)])
} else {
theta_tilde_est <- 1
}
L <- -result[opt,1]
## Return
return(list("objective"=L,"beta"=beta_est,"theta"=theta_est,"theta_tilde"=theta_tilde_est))
}
##Compute initial estimate for Beta
beta_no_lag=laguerre_estimator(0,0,X,Y,Delta,tau,starting_beta=starting_beta,trials=trials)$beta
beta_no_lag = c(0,0)
if (1==1){
grid <- matrix(runif(trials*(H)),nrow=trials)
H_no_lag = pi*as.matrix(grid[,1:(H)])
}else{H_no_lag=rep(0.43,H)}
trials = 32
if (1==1){
grid <- matrix(runif(trials*(H)),nrow=trials)
H_no_lag = pi*as.matrix(grid[,1:(H)])
}else{H_no_lag=rep(0.43,H)}
View(H_no_lag)
H
unique(kidtran$gender)
dim(Her(X_s,deg,type=type))[2] -1
X = as.matrix(cbind(rep(1, nrow(kidtran)), kidtran$age))
X_s = as.matrix(kidtran %>% select(age, gender))
m = 2
m_tilde = 2
H=3
type=c('Laguerre', 'Laguerre')
Y=kidtran$time
Delta=kidtran$delta
tau=0.5
verbose = 2
link="exp"
starting_beta = FALSE
trials = 32
X_s
## Compute Initial value for beta
deg = H
p <- dim(X)[2]
H = ifelse(H==0,0,dim(Her(X_s,deg,type=type))[2] -1 )
dims <- c(p,m,m_tilde,H)
if(isFALSE(starting_beta)==TRUE) {
starting_beta <- rep(0,p)
} else if (length(starting_beta)!=p) {
stop("Starting value has wrong dimension\n")
}
##If no heteroskedasticity, use laguerre_estimator
if(deg==0){
est = laguerre_estimator(m,m_tilde,X,Y,Delta,tau,starting_beta=starting_beta,trials=trials)
return(list("objective"=est$objective,"beta"=est$beta,"theta"=est$theta,"theta_tilde"=est$theta_tilde, "H"=1, "quantile" = tau, "X" = X))
}
if (1==1){
grid <- matrix(runif(trials*(H)),nrow=trials)
H_no_lag = pi*as.matrix(grid[,1:(H)])
}else{H_no_lag=rep(0.43,H)}
## If m=0 and m_tilde=0 that was it already
if(m==0 & m_tilde==0 & deg==0) {
return(list("objective"=-out$objective,"beta"=beta_no_lag,"theta"=1,"theta_tilde"=1, "H"=1,"X"=X,"Y"=Y,
"X_s"=X_s,"deg"=deg, "link"=link,"type"=type,"quantile"=tau))
}
## Create random grid for theta and theta_tilde
starting_values <- matrix(0,nrow=trials,ncol=p+m+m_tilde+H)
starting_values[,1:p] <- matrix(beta_no_lag,ncol=p,nrow=trials,byrow = TRUE)
starting_values[,(p+m+m_tilde+1):(p+m+m_tilde+H)] = matrix(H_no_lag,ncol=H,nrow=trials,byrow = TRUE)
## Add trials many random points for theta and theta_tilde
if(m!=0) {
grid <- matrix(runif(trials*(m)),nrow=trials)
starting_values[,(p+1):(p+m)] <- pi*as.matrix(grid[,1:(m)])
}
if(m_tilde!=0) {
grid <- matrix(runif(trials*(m_tilde)),nrow=trials)
starting_values[,(p+m+1):(p+m+m_tilde)] <- pi*as.matrix(grid[,1:(m_tilde)])
}
result <- matrix(0,nrow=trials,ncol=1+sum(dims))
opts <- list(algorithm="NLOPT_LD_LBFGS",print_level=0,xtol_rel=0.000001,maxeval=20000)
if(m==0 & m_tilde==0) {
if(verbose==1 | verbose == 3){
cat("Optimization in progress", "\n")
pb <- utils::txtProgressBar(min = 0, max = 100, style = 3)
}
for(i in 1:trials) {
out <- try(nloptr::nloptr(x0=starting_values[i,],eval_f=likelihood_wrapper_beta_only2,lb=c(rep(-Inf,p),rep(0,(H))),ub=c(rep(Inf,p),rep(pi,H)),opts=opts,X=X,X_s=X_s,type=type,Y=Y,Delta=Delta,tau=tau,dims=dims, link=link, deg=deg), silent=TRUE)
if(class(out)=="try-error"){
result[i,1] <- Inf
if(verbose==2|verbose==3){
cat("Message: Trial number", i, "in optimization encountered the following error:", out,"\n")
cat("This trial will be discarded in optimization", "\n")}
}else{
result[i,1] <- out$objective
result[i,2:(sum(dims)+1)] <- out$solution
}
if(verbose==1 | verbose == 3){
utils::setTxtProgressBar(pb, 100*i/trials)
}}
if(verbose==1|verbose==3){close(pb)}
} else if(m==0) {
if(verbose==1 | verbose == 3){
cat("Optimization in progress", "\n")
pb <- utils::txtProgressBar(min = 0, max = 100, style = 3)
}
for(i in 1:trials) {
out <- try(nloptr::nloptr(x0=starting_values[i,],eval_f=likelihood_wrapper_beta_theta_tilde2,lb=c(rep(-Inf,p),rep(0,(m_tilde+H))),ub=c(rep(Inf,p),rep(pi,m_tilde+H)),opts=opts,X=X,X_s=X_s,type=type,Y=Y,Delta=Delta,tau=tau,dims=dims, link=link, deg=deg), silent=TRUE)
if(class(out)=="try-error"){
result[i,1] <- Inf
if(verbose==2|verbose==3){
cat("Message: Trial number", i, "in optimization encountered the following error:", out, "\n")
cat("This trial will be discarded in optimization","\n")}
}else{
result[i,1] <- out$objective
result[i,2:(sum(dims)+1)] <- out$solution
}
if(verbose==1 | verbose == 3){
utils::setTxtProgressBar(pb, 100*i/trials)
}}
if(verbose==1|verbose==3){close(pb)}
} else if(m_tilde==0) {
if(verbose==1 | verbose == 3){
cat("Optimization in progress", "\n")
pb <- utils::txtProgressBar(min = 0, max = 100, style = 3)
}
for(i in 1:trials) {
out <- try(nloptr::nloptr(x0=starting_values[i,],eval_f=likelihood_wrapper_beta_theta2,lb=c(rep(-Inf,p),rep(0,m+H)),ub=c(rep(Inf,p),rep(pi,m+H)),opts=opts,X=X,X_s=X_s,type=type,Y=Y,Delta=Delta,tau=tau,dims=dims, link=link,deg=deg), silent=TRUE)
if(class(out)=="try-error"){
result[i,1] <- Inf
if(verbose==2|verbose==3){
cat("Message: Trial number", i, "in optimization encountered the following error:", out,"\n")
cat("This trial will be discarded in optimization","\n")}
}else{
result[i,1] <- out$objective
result[i,2:(sum(dims)+1)] <- out$solution
}
if(verbose==1 | verbose == 3){
utils::setTxtProgressBar(pb, 100*i/trials)
}}
if(verbose==1|verbose==3){close(pb)}
} else {
if(verbose==1 | verbose == 3){
cat("Optimization in progress", "\n")
pb <- utils::txtProgressBar(min = 0, max = 100, style = 3)
}
for(i in 1:trials) {
out <- try(nloptr::nloptr(x0=starting_values[i,],eval_f=likelihood_wrapper_all2,lb=c(rep(-Inf,p),rep(0,m+m_tilde+H)),ub=c(rep(Inf,p),rep(pi,m+m_tilde+H)),opts=opts,X=X,X_s=X_s,type=type,Y=Y,Delta=Delta,tau=tau,dims=dims, link=link,deg=deg), silent=TRUE)
if(class(out)=="try-error"){
result[i,1] <- Inf
if(verbose==2|verbose==3){
cat("Message: Trial number", i, "in optimization encountered the following error:", out,"\n")
cat("This trial will be discarded in optimization","\n")}
}else{
result[i,1] <- out$objective
result[i,2:(sum(dims)+1)] <- out$solution
}
if(verbose==1 | verbose == 3){
utils::setTxtProgressBar(pb, 100*i/trials)
}}
if(verbose==1|verbose==3){close(pb)}
}
laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=kidtran$time, Delta=kidtran$delta, tau=0.5,
verbose = 3, link="exp")
data("pneumon")
View(pneumon)
data("bfeed")
View(bfeed)
X = as.matrix(cbind(rep(1, nrow(bfeed)), bfeed$agemth))
X_s = as.matrix(bfeed %>% select(agemth, poverty))
m = 2
m_tilde = 2
H=3
type=c('Laguerre', 'Laguerre')
Y=bfeed$duration
Delta=bfeed$delta
tau=0.5
verbose = 2
link="exp"
starting_beta = FALSE
trials = 32
library(KMsurv)
data("bfeed")
library(Laguerre)
library(dplyr)
X = as.matrix(cbind(rep(1, nrow(bfeed)), bfeed$agemth))
X_s = as.matrix(bfeed %>% select(agemth, poverty))
m = 2
m_tilde = 2
H=3
type=c('Laguerre', 'Laguerre')
Y=bfeed$duration
Delta=bfeed$delta
tau=0.5
verbose = 2
link="exp"
starting_beta = FALSE
trials = 32
laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 3, link="exp")
bfeed = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp")
bfeed$objective
bfeed$beta
graph(bfeed)
X_s = as.matrix(bfeed %>% select(agemth, smoke))
bfeed %>% select(agemth, smoke)
bfeed %>% select(agemth, poverty)
bfeed
library(KMsurv)
data("bfeed")
library(Laguerre)
library(dplyr)
X = as.matrix(cbind(rep(1, nrow(bfeed)), bfeed$agemth))
X_s = as.matrix(bfeed %>% select(agemth, poverty))
m = 2
m_tilde = 2
H=3
type=c('Laguerre', 'Laguerre')
Y=bfeed$duration
Delta=bfeed$delta
tau=0.5
verbose = 2
link="exp"
starting_beta = FALSE
trials = 32
bfeed_pov = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp")
trials = 100
bfeed_pov = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp")
graph(bfeed_pov)
bfeed_pov = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp")
graph(bfeed_pov)
bfeed_pov = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp")
graph(bfeed_pov)
X_s = as.matrix(bfeed %>% select(agemth, smoke))
bfeed_smoke = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp")
graph(bfeed_smoke)
trials = 1000
bfeed_pov = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp")
bfeed_pov = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
graph(bfeed_pov)
X_s = as.matrix(bfeed %>% select(agemth, smoke))
bfeed_smoke = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
library(KMsurv)
data("bfeed")
library(Laguerre)
library(dplyr)
X = as.matrix(cbind(rep(1, nrow(bfeed)), bfeed$agemth))
X_s = as.matrix(bfeed %>% select(agemth, poverty))
m = 2
m_tilde = 2
H=3
type=c('Laguerre', 'Laguerre')
Y=bfeed$duration
Delta=bfeed$delta
tau=0.5
verbose = 2
link="exp"
starting_beta = FALSE
trials = 200
bfeed_pov = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
graph(bfeed_pov)
library(KMsurv)
data("bfeed")
library(Laguerre)
library(dplyr)
X = as.matrix(cbind(rep(1, nrow(bfeed)), bfeed$agemth))
X_s = as.matrix(bfeed %>% select(agemth, poverty))
m = 2
m_tilde = 2
H=3
type=c('Laguerre', 'Laguerre')
Y=bfeed$duration
Delta=bfeed$delta
tau=0.5
verbose = 2
link="exp"
starting_beta = FALSE
trials = 200
bfeed_pov = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
graph(bfeed_pov)
library(KMsurv)
data("bfeed")
library(Laguerre)
library(dplyr)
X = as.matrix(cbind(rep(1, nrow(bfeed)), bfeed$agemth))
X_s = as.matrix(bfeed %>% select(agemth, poverty))
m = 2
m_tilde = 2
H=3
type=c('Laguerre', 'Laguerre')
Y=bfeed$duration
Delta=bfeed$delta
tau=0.5
verbose = 2
link="exp"
starting_beta = FALSE
trials = 200
bfeed_pov = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
graph(bfeed_pov)
library(KMsurv)
data("bfeed")
library(Laguerre)
library(dplyr)
X = as.matrix(cbind(rep(1, nrow(bfeed)), bfeed$agemth))
X_s = as.matrix(bfeed %>% select(agemth, poverty))
m = 2
m_tilde = 2
H=3
type=c('Laguerre', 'Laguerre')
Y=bfeed$duration
Delta=bfeed$delta
tau=0.5
verbose = 2
link="exp"
starting_beta = FALSE
trials = 200
bfeed_pov = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
graph(bfeed_pov)
library(KMsurv)
data("bfeed")
library(Laguerre)
library(dplyr)
X = as.matrix(cbind(rep(1, nrow(bfeed)), bfeed$agemth))
X_s = as.matrix(bfeed %>% select(agemth, poverty))
m = 2
m_tilde = 2
H=3
type=c('Laguerre', 'Laguerre')
Y=bfeed$duration
Delta=bfeed$delta
tau=0.5
verbose = 2
link="exp"
starting_beta = FALSE
trials = 200
bfeed_pov = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
graph(bfeed_pov)
H=4
bfeed_pov = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
graph(bfeed_pov)
H=2
bfeed_pov = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
graph(bfeed_pov)
H=3
bfeed_pov = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
graph(bfeed_pov)
bfeed %>% ggplot(x = agemth, y = duration) + geom_line(aes(color = poverty))
library(ggplot2)
bfeed %>% ggplot(x = agemth, y = duration) + geom_line(aes(color = poverty))
bfeed %>% ggplot(aes(x = agemth, y = duration)) + geom_line(aes(color = poverty))
bfeed %>% ggplot(aes(x = agemth, y = duration)) + geom_point(aes(color = poverty))
bfeed %>% ggplot(aes(x = agemth, y = duration)) + geom_line() + facet_wrap(poverty ~.)
bfeed %>% ggplot(aes(x = agemth, y = duration)) + geom_point() + facet_wrap(poverty ~.)
bfeed %>% ggplot(aes(x = agemth, y = duration)) + geom_point(aes(color = delta)) + facet_wrap(poverty ~.)
# PNEUMON
data(pneumon)
View(pneumon)
# PNEUMON
data(psych)
View(psych)
View(psych)
# PNEUMON
data(rats)
View(rats)
# PNEUMON
data(std)
View(std)
# PNEUMON
data(std)
X = as.matrix(cbind(rep(1, nrow(std)), std$age))
X_s = as.matrix(bfeed %>% select(age, race))
m = 2
# PNEUMON
data(std)
X = as.matrix(cbind(rep(1, nrow(std)), std$age))
X_s = as.matrix(std %>% select(age, race))
m = 2
m_tilde = 2
H=3
type=c('Laguerre', 'Laguerre')
Y=std$time
Delta=std$rinfct
tau=0.5
verbose = 2
link="exp"
starting_beta = FALSE
trials = 200
std_race = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
X
X_s
std$race %>% unique()
X_s = as.matrix(std %>% select(age, race)) %>% mutate(race = ifelse(race == "B", 1, 0))
X_s = as.matrix(std %>% select(age, race) %>% mutate(race = ifelse(race == "B", 1, 0)))
m = 2
m_tilde = 2
H=3
type=c('Laguerre', 'Laguerre')
Y=std$time
Delta=std$rinfct
tau=0.5
verbose = 2
link="exp"
starting_beta = FALSE
trials = 200
std_race = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
starting_beta = c(2,1)
trials = 200
std_race = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
Y
Delta
tau=0.8
verbose = 2
link="exp"
starting_beta = c(2,1)
trials = 200
std_race = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
tau=0.2
verbose = 2
link="exp"
starting_beta = c(2,1)
trials = 200
std_race = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
starting_beta = c(10,11)
trials = 200
std_race = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
library(readxl)
data  =read.csv(file = "C:/Users/dzr/Downloads/donnees_exo5.csv")
View(data)
library(readxl)
data  =read.csv(file = "C:/Users/dzr/Downloads/donnees_exo5.csv")
# donees----
X = as.matrix(cbind(rep(1, nrow(data)), data$Age))
X_s = as.matrix(data %>% select(Age, Treatment))
m = 2
m_tilde = 2
H=3
type=c('Laguerre', 'Laguerre')
Y=data$Survival_time
Delta=data$Status
tau=0.5
verbose = 2
link="exp"
starting_beta = FALSE
trials = 200
data_trt = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
graph(data_trt)
data_trt = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
graph(data_trt)
data_trt = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
graph(data_trt)
data %>% ggplot(aes(x = Age, y = Survival_time)) + geom_point(aes(color = Status)) + facet_wrap(Treatment ~.)
library(survival)
# lung----
library(lung)
data(lung)
data(colon)
data(colon, package = 'survival')
data(cancer, package = 'survival')
data(colon, package = 'survival')
View(colon)
X = as.matrix(cbind(rep(1, nrow(colon)), colon$age))
X_s = as.matrix(colon %>% select(age, sex))
m = 2
m_tilde = 2
H=3
type=c('Laguerre', 'Laguerre')
Y=colon$time
Delta=colon$status
tau=0.5
verbose = 2
link="exp"
starting_beta = FALSE
trials = 200
colon_sex = laguerre_estimator_het(2,2,3,X,X_s,type=c('Laguerre', 'Laguerre'),Y=Y, Delta=Delta, tau=0.5,
verbose = 1, link="exp", trials=trials)
